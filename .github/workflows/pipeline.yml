name: Check - BackEnd

on:
  push:
  pull_request:

jobs:
  tests-before-build:
    strategy:
      matrix:
        name: [Java21]
        include:
          - name: Java21
            os: ubuntu-latest
            java-version: 21
    runs-on: ${{ matrix.os }}
#     steps:
#       - name: Clone Project
#         uses: actions/checkout@v4

#       - name: Set up JDK ${{ matrix.java-version }}
#         uses: actions/setup-java@v4
#         with:
#           java-version: ${{ matrix.java-version }}
#           distribution: oracle

#       - name: Setup Gradle
#         uses: gradle/actions/setup-gradle@v3

#       - name: Permission Gradle
#         run: chmod +x gradlew

#       - name: Execute Gradle Tests
#         run: ./gradlew  test

#       - name: Store Tests Reports
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: backend tests
#           path: |
#             **/build/reports/
#             **/build/test-results/

#       - name: Execute Gradle build
#         run: ./gradlew build

#       - name: Store Production Artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: distribution
#           path: |
#             **/build/libs

#   build-if-tests-successful:
#     runs-on: ubuntu-latest
#     needs: tests-before-build

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up JDK 21
#         uses: actions/setup-java@v3
#         with:
#           distribution: 'temurin'
#           java-version: '21'

#       - name: Grant execute permission for gradlew
#         run: chmod +x gradlew

#       - name: Build with Gradle
#         run: ./gradlew build

#       - name: List build directory for debugging
#         run: ls -la build/libs

#       - name: Archive JAR files
#         uses: actions/upload-artifact@v3
#         with:
#           name: my-jar-files
#           path: build/libs/*.jar

#   build-docker-image:
#         runs-on: ubuntu-latest
#         needs: build-if-tests-successful

#         steps:
#           - name: Checkout repository
#             uses: actions/checkout@v3

#           - name: Download JAR file
#             uses: actions/download-artifact@v3
#             with:
#               name: my-jar-files
#               path: ./build/libs

#           - name: List downloaded directory for debugging
#             run: ls -la ./build/libs

#           - name: Set up Docker Buildx
#             uses: docker/setup-buildx-action@v2

#           - name: Log in to GitHub Container Registry
#             uses: docker/login-action@v2
#             with:
#               registry: ghcr.io
#               username: ${{ github.actor }}
#               password: ${{ secrets.GITHUB_TOKEN }}

#           - name: Build and push Docker image
#             uses: docker/build-push-action@v3
#             with:
#               context: .
#               file: Dockerfile
#               push: true
#               tags: ghcr.io/hatem-marzougui/pipelineci-cd/my-app-image:main
